{"data":{"markdownRemark":{"html":"<p>React v0.4 is very close to completion. As we finish it off, we’d like to share with you some of the major changes we’ve made since v0.3. This is the first of several posts we’ll be making over the next week.</p>\n<h2>What is React.autoBind? {#what-is-reactautobind}</h2>\n<p>If you take a look at most of our current examples, you’ll see us using <code class=\"gatsby-code-text\">React.autoBind</code> for event handlers. This is used in place of <code class=\"gatsby-code-text\">Function.prototype.bind</code>. Remember that in JS, <a href=\"https://bonsaiden.github.io/JavaScript-Garden/#function.this\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">function calls are late-bound</a>. That means that if you simply pass a function around, the <code class=\"gatsby-code-text\">this</code> used inside won’t necessarily be the <code class=\"gatsby-code-text\">this</code> you expect. <code class=\"gatsby-code-text\">Function.prototype.bind</code> creates a new, properly bound, function so that when called, <code class=\"gatsby-code-text\">this</code> is exactly what you expect it to be.</p>\n<p>Before we launched React, we would write this:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  onClick<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* do something with this */</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  render<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n</span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We wrote <code class=\"gatsby-code-text\">React.autoBind</code> as a way to cache the function creation and save on memory usage. Since <code class=\"gatsby-code-text\">render</code> can get called multiple times, if you used <code class=\"gatsby-code-text\">this.onClick.bind(this)</code> you would actually create a new function on each pass. With React v0.3 you were able to write this instead:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  onClick<span class=\"token punctuation\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">autoBind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* do something with this */</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n</span>  render<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n</span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>What’s Changing in v0.4? {#whats-changing-in-v04}</h2>\n<p>After using <code class=\"gatsby-code-text\">React.autoBind</code> for a few weeks, we realized that there were very few times that we didn’t want that behavior. So we made it the default! Now all methods defined within <code class=\"gatsby-code-text\">React.createClass</code> will already be bound to the correct instance.</p>\n<p>Starting with v0.4 you can just write this:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  onClick<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* do something with this */</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</span>  render<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n</span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>For v0.4 we will simply be making <code class=\"gatsby-code-text\">React.autoBind</code> a no-op — it will just return the function you pass to it. Most likely you won’t have to change your code to account for this change, though we encourage you to update. We’ll publish a migration guide documenting this and other changes that come along with React v0.4.</p>","excerpt":"React v0.4 is very close to completion. As we finish it off, we’d like to share with you some of the major changes we’ve made since v0.3. This is the first of several posts we’ll be making over the next week. What is React.autoBind? {#what-is-reactautobind} If you take a look at most of our current examples, you’ll see us using   for event handlers. This is used in place of  . Remember that in JS,  function calls are late-bound . That means that if you simply pass a function around, the   used…","frontmatter":{"title":"New in React v0.4: Autobind by Default","next":null,"prev":null,"author":[{"frontmatter":{"name":"Paul O’Shannessy","url":"https://twitter.com/zpao"}}]},"fields":{"date":"July 01, 2013","path":"content\\blog\\2013-07-02-react-v0-4-autobind-by-default.md","slug":"/blog/2013/07/02/react-v0-4-autobind-by-default.html"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"创建和管理数据"},"fields":{"slug":"/blog/2019/02/23/is-react-translated-yet.html"}}},{"node":{"frontmatter":{"title":"React v16.8: The One With Hooks"},"fields":{"slug":"/blog/2019/02/06/react-v16.8.0.html"}}},{"node":{"frontmatter":{"title":"React v16.7: No, This Is Not the One With Hooks"},"fields":{"slug":"/blog/2018/12/19/react-v-16-7.html"}}},{"node":{"frontmatter":{"title":"React 16.x Roadmap"},"fields":{"slug":"/blog/2018/11/27/react-16-roadmap.html"}}},{"node":{"frontmatter":{"title":"React Conf recap: Hooks, Suspense, and Concurrent Rendering"},"fields":{"slug":"/blog/2018/11/13/react-conf-recap.html"}}},{"node":{"frontmatter":{"title":"React v16.6.0: lazy, memo and contextType"},"fields":{"slug":"/blog/2018/10/23/react-v-16-6.html"}}},{"node":{"frontmatter":{"title":"Create React App 2.0: Babel 7, Sass, and More"},"fields":{"slug":"/blog/2018/10/01/create-react-app-v2.html"}}},{"node":{"frontmatter":{"title":"Introducing the React Profiler"},"fields":{"slug":"/blog/2018/09/10/introducing-the-react-profiler.html"}}},{"node":{"frontmatter":{"title":"React v16.4.2: Server-side vulnerability fix"},"fields":{"slug":"/blog/2018/08/01/react-v-16-4-2.html"}}},{"node":{"frontmatter":{"title":"You Probably Don't Need Derived State"},"fields":{"slug":"/blog/2018/06/07/you-probably-dont-need-derived-state.html"}}}]}},"pageContext":{"slug":"/blog/2013/07/02/react-v0-4-autobind-by-default.html"}}